# This workflows will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

name: Build docs

on:
  release:
    types: [published]
  push:
    branches:
      - master
      - develop
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Fetch tags
      run: git fetch --prune --unshallow
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
    - name: Install package
      run: pip install .[doc]
    - name: Revert version to most recent version tag
      run: git checkout $(git tag -l | grep 'v.*' | tail -n 1 | awk -F post '{print $1}')
    - name: Build docs
      run: |
        cd docs
        make html
        cd ..
    - uses: actions/upload-artifact@v4
      with:
        name: docs
        path: docs/_build/html

  build-new:
    runs-on: ubuntu-latest
    # Set up the environment so that it finds conda
    defaults:
      run:
        shell: bash -l {0}
    steps:
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y pandoc xvfb libnotify-bin
    - name: Set up XVFB to handle desktp notifications
      run: |
        Xvfb :99 &
        export DISPLAY=:99
    - uses: actions/checkout@v4
    - name: Fetch tags
      run: git fetch --prune --unshallow
    - name: Install Minconda
      uses: conda-incubator/setup-miniconda@v3
      with:
        auto-activate-base: true
        activate-environment: ""
    - name: Install MRtrix via Conda
      run: |
        conda install -c mrtrix3 mrtrix3
        mrconvert --version
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
    - name: Install package
      run: pip install .[doc]
    - name: Install Python3 kernel
      run: python -m ipykernel install --user
    - name: Build new docs
      run: |
        cd new-docs
        make html
        cd ..
    - uses: actions/upload-artifact@v4
      with:
        name: new-docs
        path: new-docs/build/html

  deploy:
    needs: [build, build-new]
    runs-on: ubuntu-latest
    steps:
    - name: Download docs
      uses: actions/download-artifact@v4
      with:
        name: docs
        path: docs-build
    - name: Download new docs
      uses: actions/download-artifact@v4
      with:
        name: new-docs
        path: docs-build/new
    - name: Check for GHPAGES_DEPLOY_KEY token
      id: deployable
      # if: github.event_name == 'release'
      env:
        GHPAGES_DEPLOY_KEY: "${{ secrets.GHPAGES_DEPLOY_KEY }}"
      run: if [ -n "$GHPAGES_DEPLOY_KEY" ]; then echo "DEPLOY=true" >> $GITHUB_OUTPUT; fi
    - name: Deploy Docs to GitHub Pages
      if: steps.deployable.outputs.DEPLOY
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GHPAGES_DEPLOY_KEY }}
        publish_dir: docs-build
